name: API Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * *'  # nightly at 2 AM UTC
  workflow_dispatch:  # Allow manual triggering

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10']
        test-suite: [ "regression" ]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }} with pip cache
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
            pyproject.toml
            poetry.lock

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Debug test discovery
        run: |
          echo "=== Test Discovery Debug ==="
          echo "Current directory: $(pwd)"
          echo "Contents of tests directory:"
          ls -la tests/ || echo "tests/ directory not found"
          echo "Python version: $(python --version)"
          echo "Pytest version: $(pytest --version)"
          echo "Available test markers:"
          pytest --markers | grep -E "(smoke|post|get|put|delete|crud|regression|performance|negative|data_validation|security|slow|rate_limited)" || echo "No custom markers found"
          echo "Tests matching marker '${{ matrix.test-suite }}':"
          pytest tests/ -m "${{ matrix.test-suite }}" --collect-only -q || echo "No tests found with marker '${{ matrix.test-suite }}'"

      - name: Run tests
        run: |
          mkdir -p reports/allure-results
          echo "Attempting to run tests with marker: ${{ matrix.test-suite }}"
          if pytest tests/ -m "${{ matrix.test-suite }}" --collect-only -q >/dev/null 2>&1; then
            echo "Running tests with marker filtering..."
            pytest tests/ -m "${{ matrix.test-suite }}" \
              --junitxml=reports/junit-${{ matrix.python-version }}-${{ matrix.test-suite }}.xml \
              --html=reports/html-${{ matrix.python-version }}-${{ matrix.test-suite }}.html \
              --self-contained-html \
              --alluredir=reports/allure-results \
              -v
          else
            echo "No tests found with marker '${{ matrix.test-suite }}', running all tests..."
            pytest tests/ \
              --junitxml=reports/junit-${{ matrix.python-version }}-all.xml \
              --html=reports/html-${{ matrix.python-version }}-all.html \
              --self-contained-html \
              --alluredir=reports/allure-results \
              -v
          fi

      - name: Get Allure history
        uses: actions/checkout@v4
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Setup Pages
        if: always()
        uses: actions/configure-pages@v4

      - name: Generate Allure Report
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          allure_results: reports/allure-results
          allure_history: allure-history
          keep_reports: 20
          github_run_num: ${{ github.run_number }}
          github_run_id: ${{ github.run_id }}
          allure_report: allure-report

      - name: Upload artifact
        if: always()
        uses: actions/upload-pages-artifact@v3
        with:
          path: allure-history

      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.python-version }}-${{ matrix.test-suite }}
          path: |
            reports/
            allure-history/
          retention-days: 30

  # Deploy job
  deploy:
    needs: test
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
